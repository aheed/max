Collision bullet/prefab
Collision specific per tile type?

Alternative approach: Game objects for interaction, tiles only for decoration (grass, water, road).
Note that some commonly occuring game objects (flack guns) should be active (shoot flack).

How to paint gameobjects on a grid? Gameobject brush?
https://www.reddit.com/r/Unity2D/comments/1abbq31/how_to_detect_individual_collisions_for_tiles_in/

To make shadow reusable: flip dependency around?
  Yes, because gameObjects can be destroyed anytime (!).
  Simplest is probably to make the shadow a child object (nested prefab).

Implement SceneController*
  Function for constructing Max plane, enemy plane. Includes attaching prop and shadow.
  Set up max on startup

The object that got hit shall check altitude for actual hit and handle the consequences.*
  Report to the colliding thing (bullet or whatever)(?)
  Kill the colliding bullet?
  Every object dealing with it's own collision detection? => Double detection on each collision.*
  Helper class with static functions for altitude overlap check.*

Implement animations
  propeller*

Change appearance of plane and shadow depending on if it's turning left/right.*

Change appearance based on state. Shot enemy airplane.

How to set draw order based altitude? (max vs enemy plane on top)*
  Set draw order dynamically based on altitude

Shot plane:
  Burnt unicolor shape (not same as crashed max)
    fades in 4 shades of gray from white to black
  Flack explosion under it at the same time

Bombs
  Dropping*
  Effect on collision.
  Should not collide with anything until it's on ground level (z close to 0).*

Houses  

Use parent/child object relationships instead of home made solutions for relative position. 
Use transform.localposition instead of a separate offset vector.
  Max vs refobj*
  Bomb vs refobj*
  Shadow vs plane*
  Get rid of IPositionObservable.GetPosition()
    IPositionObservable should be renamed/split?

Use GetComponent to get scene position reference object instead of passing it through the hierarchy.

Make river sections as quads 
  https://docs.unity3d.com/Manual/Example-CreatingaBillboardPlane.html
  3 distinct slopes
  random height of each quad (sections with same slope)
  When approaching landing:
    Select the closest side of the river to land.
    The slope going the other way can not occur anymore at that point => inevitable drift to the correct side.
    Landing strip shows up when the river is out of the picture.
      Stack the odds even more in favor of bending river the preferred direction.
    Similar on start until river shows up.
    One mesh per gameobject.
    The river of a level could be a gameobject with a single mesh.
      x sections with restrictions to get close to the river.
      y sections without slope restrictions
      z sections with restrictions to get away from the river
    Correct river material to get the right color and rendering over background according to z coordinate.*
    Original game: Bridges need a long stretch of neutral slope river. Unless it's approaching landing in which case another slope makes the river bank look incorrect (!) at bridge end.

Landing strip gameObject at start and end of river section.

Color change temporarily on explosion (river and ground):
  https://discussions.unity.com/t/change-color-and-glow-for-a-while/924415/5
  Might be trickier for sprites

Temporary color swap at detonation:
https://www.youtube.com/watch?v=u4Iz5AJa31Q&t=75s

Min distance river -> house, tank...
No houses, flack or tanks beside landing strip
  Houses are never side by side in the Original game
Extra tanks around houses
River should be farther away from landing strip. No overlapping or near.
Flight restrictions
  should match camera view size
MaxControl: refObject member not necessary. Only used to set parent object for bombs. Could be done by getting maxcontrol's own parent object.

Easiest: let SceneController keep track of everything
  refobj position vs end of level
  Plane status
    accelerating
    decelerating
    flying as normal
    collided w enemy plane
    out of fuel
    killed by flack
    refuelling/repairing
  SceneController controls the status, MaxControl acts accordingly when status changes and also reacts to input based on status.
  
IGameEventReporter, implemented by SceneController
  Info flow:
    Any active object -> gameEventReporter -> refobj, max, ...
To decouple: new gameobject with sole purpose to delegate implementation of IGameEventReporter (to SceneController).

Keep all game objects under a parent object (Level). Swap out levels as needed.
  Some things, like enemy planes, can be without parent level object.

----
New level:
  RiverLeftOfAirStrip should be set according to how old level ends.
  Cleanup unused params llcx, llcy

